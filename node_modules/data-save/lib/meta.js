'use strict';
var conf = require('./config');
var prepare = require('./prepare');
var parse = require('./parse');

var getData = function(storage) {
  var vaultDataDictionary = storage.get(conf.dsData);
  if (!vaultDataDictionary) {
    vaultDataDictionary = {};
  }
  if (typeof vaultDataDictionary === 'string') {
    vaultDataDictionary = JSON.parse(vaultDataDictionary);
  }
  return vaultDataDictionary;
};
var setKeyMeta = function(storage, key, config) {
  if (key === conf.dsData) {
    return false;
  }
  config = config || {};
  var vaultDataDictionary = getData(storage);
  if (!vaultDataDictionary[key]) {
    vaultDataDictionary[key] = {};
  }

  storage.setItem(conf.dsData, prepare(vaultDataDictionary));
};
var getKeyMeta = function(storage, key) {
  if (key === conf.dsData) {
    return false;
  }
  try {
    var vaultDataDictionary = getData(storage);
    return vaultDataDictionary[key];
  } catch(e) {
    return undefined;
  }
};
var clearKeyMeta = function(storage, key) {
  if (key === conf.dsData) {
    return false;
  }
  try {
    var vaultDataDictionary = getData(storage);
    delete vaultDataDictionary[key];
    storage.setItem(conf.dsData, prepare(vaultDataDictionary));
  } catch(e) {}
};
var checkKeyMeta = function(storage, key) {
  if (key === conf.dsData) {
    return false;
  }
  try {
    var keyMeta = getKeyMeta(storage, key);
    // console.warn('keyMeta:', keyMeta);
    if (keyMeta) {
      if (keyMeta.path && typeof window !== 'undefined') {
        var storagePath = window.location.pathname || window.location.path;
        if (!storagePath.match(keyMeta.path)) {
          // console.warn('Data found for ' + key + ' but paths do not match. The browser is at ' + path + ' and the key is for ' + keyMeta.path);
          return true;
        }
      }
    }
  } catch(e) {
    console.warn('Vault Error:', e);
  }
  return false;
};

module.exports = {
  getData: getData,
  setKeyMeta: setKeyMeta,
  getKeyMeta: getKeyMeta,
  clearKeyMeta: clearKeyMeta,
  checkKeyMeta: checkKeyMeta
};
